// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using App.Data.DataBase;

namespace App.Data.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20190818033544_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("App.Core.Data.SysMenu", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Component")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ParentID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Path")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("SysMenu","Base");
                });

            modelBuilder.Entity("App.Core.Data.SysRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("RoleName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("SysRole","Base");
                });

            modelBuilder.Entity("App.Core.Data.SysRoleMenuRelation", b =>
                {
                    b.Property<string>("RoleID");

                    b.Property<string>("MenuID");

                    b.HasKey("RoleID", "MenuID");

                    b.HasIndex("MenuID");

                    b.ToTable("SysRoleMenuRelation","base");
                });

            modelBuilder.Entity("App.Core.Data.SysUserRoleRelation", b =>
                {
                    b.Property<string>("UserID");

                    b.Property<string>("RoleID");

                    b.HasKey("UserID", "RoleID");

                    b.HasIndex("RoleID");

                    b.ToTable("SysUserRoleRelation","base");
                });

            modelBuilder.Entity("App.Core.Data.SysUserInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("ContractType")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("varchar(36)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsEnable");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PermissionRange")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ReallyName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Remark")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("DATETIME");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SysUser","Base");
                });

            modelBuilder.Entity("App.Core.Data.SysMenu", b =>
                {
                    b.HasOne("App.Core.Data.SysMenu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("App.Core.Data.SysRoleMenuRelation", b =>
                {
                    b.HasOne("App.Core.Data.SysMenu", "SysMenu")
                        .WithMany("SysRoleMenuRelations")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App.Core.Data.SysRole", "SysRole")
                        .WithMany("SysRoleMenuRelations")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("App.Core.Data.SysUserRoleRelation", b =>
                {
                    b.HasOne("App.Core.Data.SysRole", "SysRole")
                        .WithMany("SysUserRoleRelations")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("App.Core.Data.SysUserInfo", "SysUserInfo")
                        .WithMany("SysUserRoleRelations")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
